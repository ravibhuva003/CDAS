{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RAVI BHUVA\\\\Desktop\\\\city-analysis-main\\\\frontend\\\\src\\\\components\\\\Signup.js\",\n  _s = $RefreshSig$();\n// import React,{useState} from 'react'\n// import {auth} from '../firebase'\n// import { createUserWithEmailAndPassword } from 'firebase/auth';\n// import {doc, setDoc} from \"firebase/firestore\"; \n// import {db} from '../firebase'\n// import \"../css/placeholder1.css\"\n// import { useNavigate } from 'react-router-dom';\n// import { Link } from 'react-router-dom';\n// export var UserId=\"\";\n// export default function SignUp(props) {\n//   const navigate = useNavigate();\n//     const [Email,setEmail]=useState(\"\")\n//     const [Password,setPassword]=useState(\"\")\n//     const [FName,setFName]=useState(\"\")\n//     const [LName,setLName]=useState(\"\")\n//     const docData = {\n//       email:Email,\n//       password: Password,\n//       fname:FName,\n//       lname:LName\n//     };\n//     async function insertData(user_id){\n//       await setDoc(doc(db, \"users\",user_id), docData);\n//       console.log(\"data inserted in db\");\n//     }\n//     function getsubstring(err)\n//     {\n//       return err.substring(5,err.length)\n//     }\n//     const handleSignUp=()=>{\n//       createUserWithEmailAndPassword(auth,Email,Password)\n//           .then((userCredential)=>{\n//               const user=userCredential.user;\n//               UserId=user.uid\n//               console.log(\"UserId:\",UserId)\n//               insertData(user.uid)\n//               console.log(\"successfully created account\")\n//           })\n//           .catch((error) => {\n//             const errorCode = error.code;\n//             document.getElementById('liveAlertPlaceholder').innerHTML = `<br/><div class=\"alert alert-success alert-dismissible text-dark text-center border-2 border-dark\" role=\"alert\">${getsubstring(errorCode)}<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button></div>`;\n//         setTimeout(() => {\n//           document.getElementById('liveAlertPlaceholder').innerHTML = \"\";\n//         }, 5000);\n//           });\n//     }\n\n//     const check=()=>{\n\n//       if(docData.email===\"\" && docData.password===\"\")\n//       {\n//         document.getElementById(\"new\").innerHTML=\"Enter Email and Password\"\n//       }\n//       else if(docData.email===\"\")\n//       {\n//         document.getElementById(\"new\").innerHTML=\"Enter Email\"\n//       }\n//       else if(docData.password===\"\")\n//       {\n//         document.getElementById(\"new\").innerHTML=\"Enter Password\"\n//       }\n//       else{\n//         handleSignUp();\n//       }\n//     }\n//     const pass=()=>{\n//       if(auth.currentUser){\n//         navigate(\"/\");;\n//     }\n//     } \n//     function todo(){\n//        check();\n//        setTimeout(pass, 3000)\n//       }\n//   return (\n//     <div>\n//       <br/>\n\n//       <div className=\"container\">\n//         <div className=\"text-center\"><h2>SignUp</h2></div>\n//         <div className=\"my-3\">\n//         <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">First Name</label>\n//         <input type=\"text\" className={`form-control ${props.mode===\"light\"?\"light1\":\"dark1\"}`} style={{background:`${props.mode===\"light\"?\"white\":\"rgb(24,24,24)\"}`,color:`${props.mode===\"light\"?\"black\":\"white\"}`}} id=\"exampleFormControlInput1\" placeholder=\"Enter Name\" onChange={(event)=>setFName(event.target.value)}/>\n//         </div>\n//         <div className=\"my-3\">\n//         <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">Last Name</label>\n//         <input type=\"text\" className={`form-control ${props.mode===\"light\"?\"light1\":\"dark1\"}`} style={{background:`${props.mode===\"light\"?\"white\":\"rgb(24,24,24)\"}`,color:`${props.mode===\"light\"?\"black\":\"white\"}`}} id=\"exampleFormControlInput2\" placeholder=\"Enter Name\" onChange={(event)=>setLName(event.target.value)}/>\n//         </div>\n//         <div className=\"my-3\">\n//         <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">Email address<b className='text text-danger'>*</b></label>\n//         <input type=\"email\" className={`form-control ${props.mode===\"light\"?\"light1\":\"dark1\"}`} style={{background:`${props.mode===\"light\"?\"white\":\"rgb(24,24,24)\"}`,color:`${props.mode===\"light\"?\"black\":\"white\"}`}} id=\"exampleFormControlInput3\" placeholder=\"Enter Email\" onChange={(event)=>setEmail(event.target.value)}/>\n//         </div>\n//         <div className=\"my-3\">\n//         <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">Password<b className='text text-danger'>*</b></label>\n//         <input type=\"password\" className={`form-control ${props.mode===\"light\"?\"light1\":\"dark1\"}`} style={{background:`${props.mode===\"light\"?\"white\":\"rgb(24,24,24)\"}`,color:`${props.mode===\"light\"?\"black\":\"white\"}`}} id=\"exampleFormControlInput4\" placeholder=\"Enter password\" onChange={(event)=>setPassword(event.target.value)}/>\n//         </div>\n//           <div className=\"text text-center text-danger fw-bold\" id=\"new\"></div>\n//         <div className=\"d-flex justify-content-center\">\n//         <button className=\"btn btn-primary\" onClick={todo}>SignUp</button>\n//         </div>\n//         <div>\n//         <div>Already have an account? <Link to=\"/login\">Login</Link></div>\n//       </div>\n//       </div>\n//     </div>\n//   )\n// }\n\nimport { useRef, useState, useEffect } from \"react\";\nimport { faCheck, faTimes, faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport axios from \"../api/axios\";\nimport Button from \"react-bootstrap/Button\";\nimport { Navigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst USER_REGEX = /^[a-zA-Z][a-zA-Z0-9-_]{3,23}$/;\n//Username must start with alphabet and followed by any alphabet,integer and _ from 3 to 23 cgaracters.\n\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\n//Password must contain one lowercase,one uppercase, one digit and one special character between 8 to 24 characters.\n\nconst EMAIL_REGEX = /^[a-zA-Z0-9]+@(?:[a-zA-Z0-9]+\\.)+[A-Za-z]+$/;\nconst REGISTER_URL = \"/register\";\nfunction SignUp() {\n  _s();\n  const userRef = useRef();\n  const errRef = useRef();\n  const [user, setUser] = useState(\"\");\n  const [validName, setValidName] = useState(false);\n  const [userFocus, setUserFocus] = useState(false);\n  const [pwd, setPwd] = useState(\"\");\n  const [validPwd, setValidPwd] = useState(false);\n  const [pwdFocus, setPwdFocus] = useState(false);\n  const [matchPwd, setMatchPwd] = useState(\"\");\n  const [validMatch, setValidMatch] = useState(false);\n  const [matchFocus, setMatchFocus] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [validEmail, setValidEmail] = useState(false);\n  const [emailFocus, setEmailFocus] = useState(false);\n  const [errMsg, setErrMsg] = useState(\"\");\n  const [success, setSuccess] = useState(false);\n  const [branch, setBranch] = useState(\"\");\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n  useEffect(() => {\n    setValidName(USER_REGEX.test(user));\n  }, [user]);\n  useEffect(() => {\n    setValidPwd(PWD_REGEX.test(pwd));\n    setValidMatch(pwd === matchPwd);\n  }, [pwd, matchPwd]);\n  useEffect(() => {\n    setValidEmail(EMAIL_REGEX.test(email));\n  }, [email]);\n  useEffect(() => {\n    setErrMsg(\"\");\n  }, [user, pwd, matchPwd, email]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const v1 = USER_REGEX.test(user);\n    const v2 = PWD_REGEX.test(pwd);\n    const v3 = EMAIL_REGEX.test(email);\n    if (!v1 || !v2 || !v3) {\n      setErrMsg(\"Invalid Entry\");\n      return;\n    }\n    try {\n      const response = await axios.post(REGISTER_URL, JSON.stringify({\n        user,\n        pwd,\n        email,\n        branch\n      }), {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        withCredentials: true\n      });\n      console.log(response.data);\n      console.log(response.accessToken);\n      console.log(JSON.stringify(response));\n      setSuccess(true);\n      alert(\"Your SignUP request has been sent successfully to Admin. You will be able to login once admin verify you.\");\n      setUser(\"\");\n      setPwd(\"\");\n      setMatchPwd(\"\");\n      setBranch(\"\");\n    } catch (err) {\n      var _err$response;\n      if (!(err !== null && err !== void 0 && err.response)) {\n        setErrMsg(\"No Server Response\");\n      } else if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 409) {\n        setErrMsg(\"Username Taken\");\n      } else {\n        setErrMsg(\"Registration Failed\");\n      }\n      errRef.current.focus();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: success ? /*#__PURE__*/_jsxDEV(Navigate, {\n      replace: true,\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section3\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          ref: errRef,\n          className: errMsg ? \"errmsg\" : \"offscreen\",\n          \"aria-live\": \"assertive\",\n          children: errMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"username\",\n              children: [\"Username :\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCheck,\n                className: validName ? \"valid\" : \"hide\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTimes,\n                className: validName || !user ? \"hide\" : \"invalid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              class: \"form-control\",\n              id: \"username\",\n              ref: userRef,\n              autoComplete: \"off\",\n              onChange: e => setUser(e.target.value),\n              value: user,\n              required: true,\n              \"aria-invalid\": validName ? \"false\" : \"true\",\n              \"aria-describedby\": \"uidnote\",\n              onFocus: () => setUserFocus(true),\n              onBlur: () => setUserFocus(false),\n              placeholder: \"Enter Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"uidnote\",\n            className: userFocus && user && !validName ? \"instructions\" : \"offscreen\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faInfoCircle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this), \"4 to 24 characters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this), \"Must begin with a letter.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this), \"Letters, numbers, underscores, hyphens allowed.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: [\"Password:\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCheck,\n                className: validPwd ? \"valid\" : \"hide\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTimes,\n                className: validPwd || !pwd ? \"hide\" : \"invalid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control\",\n              id: \"password\",\n              onChange: e => setPwd(e.target.value),\n              value: pwd,\n              required: true,\n              \"aria-invalid\": validPwd ? \"false\" : \"true\",\n              \"aria-describedby\": \"pwdnote\",\n              onFocus: () => setPwdFocus(true),\n              onBlur: () => setPwdFocus(false),\n              placeholder: \"Enter Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"pwdnote\",\n            className: pwdFocus && !validPwd ? \"instructions\" : \"offscreen\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faInfoCircle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this), \"8 to 24 characters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this), \"Must include uppercase and lowercase letters, a number and a special character.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this), \"Allowed special characters:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              \"aria-label\": \"exclamation mark\",\n              children: \"!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              \"aria-label\": \"at symbol\",\n              children: \"@\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              \"aria-label\": \"hashtag\",\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              \"aria-label\": \"dollar sign\",\n              children: \"$\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              \"aria-label\": \"percent\",\n              children: \"%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"confirm_pwd\",\n              children: [\"Confirm Password:\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCheck,\n                className: validMatch && matchPwd ? \"valid\" : \"hide\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTimes,\n                className: validMatch || !matchPwd ? \"hide\" : \"invalid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"confirm_pwd\",\n              className: \"form-control\",\n              onChange: e => setMatchPwd(e.target.value),\n              value: matchPwd,\n              required: true,\n              \"aria-invalid\": validMatch ? \"false\" : \"true\",\n              \"aria-describedby\": \"confirmnote\",\n              onFocus: () => setMatchFocus(true),\n              onBlur: () => setMatchFocus(false),\n              placeholder: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"confirmnote\",\n              className: matchFocus && !validMatch ? \"instructions\" : \"offscreen\",\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faInfoCircle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 19\n              }, this), \"Must match the first password input field.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: [\"E-mail :\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCheck,\n                className: validEmail ? \"valid\" : \"hide\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTimes,\n                className: validEmail || !email ? \"hide\" : \"invalid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"form-control\",\n              id: \"confirm_email\",\n              ref: userRef,\n              autoComplete: \"off\",\n              onChange: e => setEmail(e.target.value),\n              value: email,\n              required: true,\n              \"aria-invalid\": validEmail ? \"false\" : \"true\",\n              \"aria-describedby\": \"emailnote\",\n              onFocus: () => setEmailFocus(true),\n              onBlur: () => setEmailFocus(false),\n              placeholder: \"Enter E-mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"emailnote\",\n              className: userFocus && email && !validEmail ? \"instructions\" : \"offscreen\",\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faInfoCircle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 19\n              }, this), \"Enter Valid Email ID.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"exampleInputEmail1\",\n            children: \"Branch : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            class: \"form-select form-select-sm\",\n            \"aria-label\": \".form-select-sm example\",\n            onChange: e => setBranch(e.target.value),\n            value: branch,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              selected: true,\n              children: \"Select Branch \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"CE\",\n              children: \"CE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"IT\",\n              children: \"IT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"EC\",\n              children: \"EC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"CH\",\n              children: \"CH\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"MH\",\n              children: \"MH\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"IC\",\n              children: \"IC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Cl\",\n              children: \"CL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"align\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-dark\",\n              type: \"submit\",\n              disabled: !validName || !validPwd || !validMatch || !validEmail ? true : false,\n              children: \"SignUp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Already registered? \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/\",\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n_s(SignUp, \"3kAJwMaJPyRyJLSNy951kcrXz/U=\");\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["useRef","useState","useEffect","faCheck","faTimes","faInfoCircle","FontAwesomeIcon","axios","Button","Navigate","USER_REGEX","PWD_REGEX","EMAIL_REGEX","REGISTER_URL","SignUp","userRef","errRef","user","setUser","validName","setValidName","userFocus","setUserFocus","pwd","setPwd","validPwd","setValidPwd","pwdFocus","setPwdFocus","matchPwd","setMatchPwd","validMatch","setValidMatch","matchFocus","setMatchFocus","email","setEmail","validEmail","setValidEmail","emailFocus","setEmailFocus","errMsg","setErrMsg","success","setSuccess","branch","setBranch","current","focus","test","handleSubmit","e","preventDefault","v1","v2","v3","response","post","JSON","stringify","headers","withCredentials","console","log","data","accessToken","alert","err","status","target","value"],"sources":["C:/Users/RAVI BHUVA/Desktop/city-analysis-main/frontend/src/components/Signup.js"],"sourcesContent":["// import React,{useState} from 'react'\n// import {auth} from '../firebase'\n// import { createUserWithEmailAndPassword } from 'firebase/auth';\n// import {doc, setDoc} from \"firebase/firestore\"; \n// import {db} from '../firebase'\n// import \"../css/placeholder1.css\"\n// import { useNavigate } from 'react-router-dom';\n// import { Link } from 'react-router-dom';\n// export var UserId=\"\";\n// export default function SignUp(props) {\n//   const navigate = useNavigate();\n//     const [Email,setEmail]=useState(\"\")\n//     const [Password,setPassword]=useState(\"\")\n//     const [FName,setFName]=useState(\"\")\n//     const [LName,setLName]=useState(\"\")\n//     const docData = {\n//       email:Email,\n//       password: Password,\n//       fname:FName,\n//       lname:LName\n//     };\n//     async function insertData(user_id){\n//       await setDoc(doc(db, \"users\",user_id), docData);\n//       console.log(\"data inserted in db\");\n//     }\n//     function getsubstring(err)\n//     {\n//       return err.substring(5,err.length)\n//     }\n//     const handleSignUp=()=>{\n//       createUserWithEmailAndPassword(auth,Email,Password)\n//           .then((userCredential)=>{\n//               const user=userCredential.user;\n//               UserId=user.uid\n//               console.log(\"UserId:\",UserId)\n//               insertData(user.uid)\n//               console.log(\"successfully created account\")\n//           })\n//           .catch((error) => {\n//             const errorCode = error.code;\n//             document.getElementById('liveAlertPlaceholder').innerHTML = `<br/><div class=\"alert alert-success alert-dismissible text-dark text-center border-2 border-dark\" role=\"alert\">${getsubstring(errorCode)}<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button></div>`;\n//         setTimeout(() => {\n//           document.getElementById('liveAlertPlaceholder').innerHTML = \"\";\n//         }, 5000);\n//           });\n//     }\n\n//     const check=()=>{\n      \n//       if(docData.email===\"\" && docData.password===\"\")\n//       {\n//         document.getElementById(\"new\").innerHTML=\"Enter Email and Password\"\n//       }\n//       else if(docData.email===\"\")\n//       {\n//         document.getElementById(\"new\").innerHTML=\"Enter Email\"\n//       }\n//       else if(docData.password===\"\")\n//       {\n//         document.getElementById(\"new\").innerHTML=\"Enter Password\"\n//       }\n//       else{\n//         handleSignUp();\n//       }\n//     }\n//     const pass=()=>{\n//       if(auth.currentUser){\n//         navigate(\"/\");;\n//     }\n//     } \n//     function todo(){\n//        check();\n//        setTimeout(pass, 3000)\n//       }\n//   return (\n//     <div>\n//       <br/>\n\n//       <div className=\"container\">\n//         <div className=\"text-center\"><h2>SignUp</h2></div>\n//         <div className=\"my-3\">\n//         <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">First Name</label>\n//         <input type=\"text\" className={`form-control ${props.mode===\"light\"?\"light1\":\"dark1\"}`} style={{background:`${props.mode===\"light\"?\"white\":\"rgb(24,24,24)\"}`,color:`${props.mode===\"light\"?\"black\":\"white\"}`}} id=\"exampleFormControlInput1\" placeholder=\"Enter Name\" onChange={(event)=>setFName(event.target.value)}/>\n//         </div>\n//         <div className=\"my-3\">\n//         <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">Last Name</label>\n//         <input type=\"text\" className={`form-control ${props.mode===\"light\"?\"light1\":\"dark1\"}`} style={{background:`${props.mode===\"light\"?\"white\":\"rgb(24,24,24)\"}`,color:`${props.mode===\"light\"?\"black\":\"white\"}`}} id=\"exampleFormControlInput2\" placeholder=\"Enter Name\" onChange={(event)=>setLName(event.target.value)}/>\n//         </div>\n//         <div className=\"my-3\">\n//         <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">Email address<b className='text text-danger'>*</b></label>\n//         <input type=\"email\" className={`form-control ${props.mode===\"light\"?\"light1\":\"dark1\"}`} style={{background:`${props.mode===\"light\"?\"white\":\"rgb(24,24,24)\"}`,color:`${props.mode===\"light\"?\"black\":\"white\"}`}} id=\"exampleFormControlInput3\" placeholder=\"Enter Email\" onChange={(event)=>setEmail(event.target.value)}/>\n//         </div>\n//         <div className=\"my-3\">\n//         <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">Password<b className='text text-danger'>*</b></label>\n//         <input type=\"password\" className={`form-control ${props.mode===\"light\"?\"light1\":\"dark1\"}`} style={{background:`${props.mode===\"light\"?\"white\":\"rgb(24,24,24)\"}`,color:`${props.mode===\"light\"?\"black\":\"white\"}`}} id=\"exampleFormControlInput4\" placeholder=\"Enter password\" onChange={(event)=>setPassword(event.target.value)}/>\n//         </div>\n//           <div className=\"text text-center text-danger fw-bold\" id=\"new\"></div>\n//         <div className=\"d-flex justify-content-center\">\n//         <button className=\"btn btn-primary\" onClick={todo}>SignUp</button>\n//         </div>\n//         <div>\n//         <div>Already have an account? <Link to=\"/login\">Login</Link></div>\n//       </div>\n//       </div>\n//     </div>\n//   )\n// }\n\nimport { useRef, useState, useEffect } from \"react\";\nimport {\n  faCheck,\n  faTimes,\n  faInfoCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport axios from \"../api/axios\";\nimport Button from \"react-bootstrap/Button\";\nimport { Navigate } from \"react-router\";\n\nconst USER_REGEX = /^[a-zA-Z][a-zA-Z0-9-_]{3,23}$/;\n//Username must start with alphabet and followed by any alphabet,integer and _ from 3 to 23 cgaracters.\n\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\n//Password must contain one lowercase,one uppercase, one digit and one special character between 8 to 24 characters.\n\nconst EMAIL_REGEX = /^[a-zA-Z0-9]+@(?:[a-zA-Z0-9]+\\.)+[A-Za-z]+$/;\n\nconst REGISTER_URL = \"/register\";\n\nfunction SignUp() {\n  const userRef = useRef();\n  const errRef = useRef();\n\n  const [user, setUser] = useState(\"\");\n  const [validName, setValidName] = useState(false);\n  const [userFocus, setUserFocus] = useState(false);\n\n  const [pwd, setPwd] = useState(\"\");\n  const [validPwd, setValidPwd] = useState(false);\n  const [pwdFocus, setPwdFocus] = useState(false);\n\n  const [matchPwd, setMatchPwd] = useState(\"\");\n  const [validMatch, setValidMatch] = useState(false);\n  const [matchFocus, setMatchFocus] = useState(false);\n\n  const [email, setEmail] = useState(\"\");\n  const [validEmail, setValidEmail] = useState(false);\n  const [emailFocus, setEmailFocus] = useState(false);\n\n  const [errMsg, setErrMsg] = useState(\"\");\n  const [success, setSuccess] = useState(false);\n\n  const [branch, setBranch] = useState(\"\");\n\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n\n  useEffect(() => {\n    setValidName(USER_REGEX.test(user));\n  }, [user]);\n\n  useEffect(() => {\n    setValidPwd(PWD_REGEX.test(pwd));\n    setValidMatch(pwd === matchPwd);\n  }, [pwd, matchPwd]);\n\n  useEffect(() => {\n    setValidEmail(EMAIL_REGEX.test(email));\n  }, [email]);\n\n  useEffect(() => {\n    setErrMsg(\"\");\n  }, [user, pwd, matchPwd, email]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const v1 = USER_REGEX.test(user);\n    const v2 = PWD_REGEX.test(pwd);\n    const v3 = EMAIL_REGEX.test(email);\n\n    if (!v1 || !v2 || !v3) {\n      setErrMsg(\"Invalid Entry\");\n      return;\n    }\n\n    try {\n      const response = await axios.post(\n        REGISTER_URL,\n        JSON.stringify({ user, pwd, email, branch }),\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n          withCredentials: true,\n        }\n      );\n      console.log(response.data);\n      console.log(response.accessToken);\n      console.log(JSON.stringify(response));\n      setSuccess(true);\n      alert(\"Your SignUP request has been sent successfully to Admin. You will be able to login once admin verify you.\");\n      setUser(\"\");\n      setPwd(\"\");\n      setMatchPwd(\"\");\n      setBranch(\"\");\n    } catch (err) {\n      if (!err?.response) {\n        setErrMsg(\"No Server Response\");\n      } else if (err.response?.status === 409) {\n        setErrMsg(\"Username Taken\");\n      } else {\n        setErrMsg(\"Registration Failed\");\n      }\n      errRef.current.focus();\n    }\n  };\n\n  return (\n    <>\n      {success ? (\n        <Navigate replace to=\"/login\" />\n      ) : (\n        <>\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n\n          <section3>\n            <p\n              ref={errRef}\n              className={errMsg ? \"errmsg\" : \"offscreen\"}\n              aria-live=\"assertive\"\n            >\n              {errMsg}\n            </p>\n\n            <h3 >Sign Up</h3>\n            <form onSubmit={handleSubmit}>\n              {/* --------------USERNAME-------------------------- */}\n              <div class=\"form-group\">\n                <label for=\"username\">\n                  Username :\n                  <FontAwesomeIcon\n                    icon={faCheck}\n                    className={validName ? \"valid\" : \"hide\"}\n                  />\n                  <FontAwesomeIcon\n                    icon={faTimes}\n                    className={validName || !user ? \"hide\" : \"invalid\"}\n                  />\n                </label>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  id=\"username\"\n                  ref={userRef}\n                  autoComplete=\"off\"\n                  onChange={(e) => setUser(e.target.value)}\n                  value={user}\n                  required\n                  aria-invalid={validName ? \"false\" : \"true\"}\n                  aria-describedby=\"uidnote\"\n                  onFocus={() => setUserFocus(true)}\n                  onBlur={() => setUserFocus(false)}\n                  placeholder=\"Enter Username\"\n                />\n              </div>\n\n              <p\n                id=\"uidnote\"\n                className={\n                  userFocus && user && !validName ? \"instructions\" : \"offscreen\"\n                }\n              >\n                <FontAwesomeIcon icon={faInfoCircle} />\n                4 to 24 characters.\n                <br />\n                Must begin with a letter.\n                <br />\n                Letters, numbers, underscores, hyphens allowed.\n              </p>\n\n              {/* -------------------- PASSWORD ------------------------- */}\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">\n                  Password:\n                  <FontAwesomeIcon\n                    icon={faCheck}\n                    className={validPwd ? \"valid\" : \"hide\"}\n                  />\n                  <FontAwesomeIcon\n                    icon={faTimes}\n                    className={validPwd || !pwd ? \"hide\" : \"invalid\"}\n                  />\n                </label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  id=\"password\"\n                  onChange={(e) => setPwd(e.target.value)}\n                  value={pwd}\n                  required\n                  aria-invalid={validPwd ? \"false\" : \"true\"}\n                  aria-describedby=\"pwdnote\"\n                  onFocus={() => setPwdFocus(true)}\n                  onBlur={() => setPwdFocus(false)}\n                  placeholder=\"Enter Password\"\n                />\n              </div>\n\n              <p\n                id=\"pwdnote\"\n                className={pwdFocus && !validPwd ? \"instructions\" : \"offscreen\"}\n              >\n                <FontAwesomeIcon icon={faInfoCircle} />\n                8 to 24 characters.\n                <br />\n                Must include uppercase and lowercase letters, a number and a\n                special character.\n                <br />\n                Allowed special characters:{\" \"}\n                <span aria-label=\"exclamation mark\">!</span>{\" \"}\n                <span aria-label=\"at symbol\">@</span>{\" \"}\n                <span aria-label=\"hashtag\">#</span>{\" \"}\n                <span aria-label=\"dollar sign\">$</span>{\" \"}\n                <span aria-label=\"percent\">%</span>\n              </p>\n\n              {/* ------------------------ CONFIRM PASSWORD ----------------------- */}\n              <div className=\"form-group\">\n                <label htmlFor=\"confirm_pwd\">\n                  Confirm Password:\n                  <FontAwesomeIcon\n                    icon={faCheck}\n                    className={validMatch && matchPwd ? \"valid\" : \"hide\"}\n                  />\n                  <FontAwesomeIcon\n                    icon={faTimes}\n                    className={validMatch || !matchPwd ? \"hide\" : \"invalid\"}\n                  />\n                </label>\n                <input\n                  type=\"password\"\n                  id=\"confirm_pwd\"\n                  className=\"form-control\"\n                  onChange={(e) => setMatchPwd(e.target.value)}\n                  value={matchPwd}\n                  required\n                  aria-invalid={validMatch ? \"false\" : \"true\"}\n                  aria-describedby=\"confirmnote\"\n                  onFocus={() => setMatchFocus(true)}\n                  onBlur={() => setMatchFocus(false)}\n                  placeholder=\"Confirm Password\"\n                />\n                <p\n                  id=\"confirmnote\"\n                  className={\n                    matchFocus && !validMatch ? \"instructions\" : \"offscreen\"\n                  }\n                >\n                  <FontAwesomeIcon icon={faInfoCircle} />\n                  Must match the first password input field.\n                </p>\n              </div>\n\n              {/* ----------------------------- EMAIL -------------------------- */}\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">\n                  E-mail :\n                  <FontAwesomeIcon\n                    icon={faCheck}\n                    className={validEmail ? \"valid\" : \"hide\"}\n                  />\n                  <FontAwesomeIcon\n                    icon={faTimes}\n                    className={validEmail || !email ? \"hide\" : \"invalid\"}\n                  />\n                </label>\n\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  id=\"confirm_email\"\n                  ref={userRef}\n                  autoComplete=\"off\"\n                  onChange={(e) => setEmail(e.target.value)}\n                  value={email}\n                  required\n                  aria-invalid={validEmail ? \"false\" : \"true\"}\n                  aria-describedby=\"emailnote\"\n                  onFocus={() => setEmailFocus(true)}\n                  onBlur={() => setEmailFocus(false)}\n                  placeholder=\"Enter E-mail\"\n                />\n\n                <p\n                  id=\"emailnote\"\n                  className={\n                    userFocus && email && !validEmail\n                      ? \"instructions\"\n                      : \"offscreen\"\n                  }\n                >\n                  <FontAwesomeIcon icon={faInfoCircle} />\n                  Enter Valid Email ID.\n                  <br />\n                </p>\n              </div>\n\n              {/* ------------------------- Branch ------------------------------------- */}\n              <label for=\"exampleInputEmail1\">Branch : </label>\n              <select\n                class=\"form-select form-select-sm\"\n                aria-label=\".form-select-sm example\"\n                onChange={(e) => setBranch(e.target.value)}\n                value={branch}\n                required\n              >\n                <option selected>Select Branch </option>\n                <option value=\"CE\">CE</option>\n                <option value=\"IT\">IT</option>\n                <option value=\"EC\">EC</option>\n                <option value=\"CH\">CH</option>\n                <option value=\"MH\">MH</option>\n                <option value=\"IC\">IC</option>\n                <option value=\"Cl\">CL</option>\n              </select>\n\n              {/* ---------------------- SIGNUP BUTTON ---------------------------- */}\n\n              <div className=\"align\">\n                <Button\n                  variant=\"outline-dark\"\n                  type=\"submit\"\n                  disabled={\n                    !validName || !validPwd || !validMatch || !validEmail\n                      ? true\n                      : false\n                  }\n                >\n                  SignUp\n                </Button>\n              </div>\n            </form>\n\n            <p>\n              Already registered? <a href=\"/\">Log In</a>\n            </p>\n          </section3>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default SignUp;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACnD,SACEC,OAAO,EACPC,OAAO,EACPC,YAAY,QACP,mCAAmC;AAC1C,SAASC,eAAe,QAAQ,gCAAgC;AAChE,OAAOC,KAAK,MAAM,cAAc;AAChC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,SAASC,QAAQ,QAAQ,cAAc;AAAC;AAAA;AAExC,MAAMC,UAAU,GAAG,+BAA+B;AAClD;;AAEA,MAAMC,SAAS,GAAG,yDAAyD;AAC3E;;AAEA,MAAMC,WAAW,GAAG,6CAA6C;AAEjE,MAAMC,YAAY,GAAG,WAAW;AAEhC,SAASC,MAAM,GAAG;EAAA;EAChB,MAAMC,OAAO,GAAGf,MAAM,EAAE;EACxB,MAAMgB,MAAM,GAAGhB,MAAM,EAAE;EAEvB,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAM,CAACsB,GAAG,EAAEC,MAAM,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"},"metadata":{},"sourceType":"module","externalDependencies":[]}